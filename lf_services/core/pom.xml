<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>ass2.leet-fleet.lf_services</groupId>
    <artifactId>core</artifactId>
    <version>0.0.1</version>
    <packaging>jar</packaging>

    <properties>
        <main.class>lf.core.HttpToAkka</main.class>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <akka.version>2.7.0</akka.version>
        <akka.http.version>10.4.0</akka.http.version>
        <!-- Specify java versions for Maven compiler plugin -->
        <!-- See: https://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- For managing akka classic clustering versioning -->
        <scala.binary.version>2.13</scala.binary.version>
    </properties>

    <repositories></repositories>

    <dependencies>
        <!-- <dependency>
            <groupId>ass2.quoco-akka</groupId>
            <artifactId>core</artifactId>
            <version>0.0.1</version>
        </dependency> -->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor-typed_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <!-- Jedis dependancy -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>4.3.1</version>
        </dependency>
        <!--
            Dependencies for http (@see https://doc.akka.io/docs/akka-http/current/introduction.html)
            Akka HTTP is provided as *independent modules from Akka itself*
            (under its own release cycle). Akka HTTP is compatible with Akka >= 2.7.0
        -->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http-bom_${scala.binary.version}</artifactId>
            <version>${akka.http.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-stream_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http_${scala.binary.version}</artifactId>
            <version>${akka.http.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http-jackson_${scala.binary.version}</artifactId>
            <version>${akka.http.version}</version>
        </dependency>
        <!-- Akka remoting with Artery -->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-bom_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-remote_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-cluster-typed_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-serialization-jackson_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-testkit_${scala.binary.version}</artifactId>
            <version>${akka.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Unit Testing -->
         <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <!-- Logging -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.19.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.19.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.19.0</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
             <!-- Plugin used to run Java programs -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <configuration>
                    <mainClass>${main.class}</mainClass>
                </configuration>
            </plugin>
         </plugins>
    </build>
</project>
